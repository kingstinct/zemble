type Query {
  getAllBooks: [Books!]!
  searchBooks(query: String!, caseSensitive: Boolean, diacriticSensitive: Boolean, language: String): [Books!]!
  filterBooks(id: BookIdFilter, title: BookTitleFilter, author: BookAuthorFilter): [Books!]!
  getBookById(id: ID!): Books!
  getBooksById(ids: [ID!]!): [Books!]!
  getAllAuthors: [Authors!]!
  searchAuthors(query: String!, caseSensitive: Boolean, diacriticSensitive: Boolean, language: String): [Authors!]!
  filterAuthors(id: AuthorIdFilter, firstName: AuthorFirstNameFilter, lastName: AuthorLastNameFilter): [Authors!]!
  getAuthorById(id: ID!): Authors!
  getAuthorsById(ids: [ID!]!): [Authors!]!
  getAllPublishers: [Publishers!]!
  searchPublishers(query: String!, caseSensitive: Boolean, diacriticSensitive: Boolean, language: String): [Publishers!]!
  filterPublishers(id: PublisherIdFilter): [Publishers!]!
  getPublisherById(id: ID!): Publishers!
  getPublishersById(ids: [ID!]!): [Publishers!]!
}

type Books {
  displayName: String
  id: ID
  title: String!
  author: AuthorsRelation
  editors: [BookEditorsUnion]!
}

type AuthorsRelation {
  displayName: String
  id: ID!
  firstName: String!
  lastName: String!
}

union BookEditorsUnion = BookEditorsEditor

type BookEditorsEditor {
  editor: AuthorsRelation
}

input BookIdFilter {
  eq: ID
}

input BookTitleFilter {
  eq: String
}

input BookAuthorFilter {
  eq: ID
}

type Authors {
  displayName: String
  id: ID
  firstName: String!
  lastName: String!
}

input AuthorIdFilter {
  eq: ID
}

input AuthorFirstNameFilter {
  eq: String
}

input AuthorLastNameFilter {
  eq: String
}

type Publishers {
  displayName: String
  id: ID
}

input PublisherIdFilter {
  eq: ID
}

type Mutation {
  createBook(id: ID, title: String!, author: ID, editors: [BookEditorsInput]!): Books
  deleteBook(id: ID!): Boolean!
  createAuthor(id: ID, firstName: String!, lastName: String!): Authors
  deleteAuthor(id: ID!): Boolean!
  createPublisher(id: ID): Publishers
  deletePublisher(id: ID!): Boolean!
}

input BookEditorsInput {
  editor: ID
}
