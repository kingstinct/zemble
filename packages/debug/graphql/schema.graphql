scalar JSONObject

input AuthOr {
  includes: JSONObject
  match: JSONObject
}

directive @auth(match: JSONObject, skip: Boolean, includes: JSONObject, or: [AuthOr!]) on FIELD_DEFINITION

type Mutation {
  setEnv(key: String!, value: String!): JSONObject! @auth(or: [{ includes: { permissions: "@zemble/debug" } }, { includes: { permissions: "admin" } }, { includes: { permissions: "operations" } }])
  removeEnv(key: String!): JSONObject! @auth(or: [{ includes: { permissions: "@zemble/debug" } }, { includes: { permissions: "admin" } }, { includes: { permissions: "operations" } }])
  enableDebug(namespaces: String): String! @auth(or: [{ includes: { permissions: "@zemble/debug" } }, { includes: { permissions: "admin" } }, { includes: { permissions: "operations" } }])
  disableDebug: Boolean! @auth(or: [{ includes: { permissions: "@zemble/debug" } }, { includes: { permissions: "admin" } }, { includes: { permissions: "operations" } }])
}

type Query {
  env: JSONObject!
    @auth(
      or: [
        { includes: { permissions: "@zemble/debug:read" } }
        { includes: { permissions: "@zemble/debug" } }
        { includes: { permissions: "admin" } }
        { includes: { permissions: "operations" } }
        { includes: { permissions: "operations:read" } }
      ]
    )
}
